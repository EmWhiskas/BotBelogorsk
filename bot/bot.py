import random
import shutil
import os
import subprocess
import telebot
from telebot import types
import ZaprosAlleys, ZaprosParki, ZaprosSquares, ZaprosMonuments, ZaprosFacts, ZaprosCulture
bot = telebot.TeleBot('6909012923:AAHsP4syZ6iEwjWUFnrqukP0JzFzKqx2vKk')
parks = False
alleys = False
squares = False
monuments = False
cultura = False
update = False


#–ü—É—Ç—å –∫ –±–æ—Ç—É
waytobot = r'C:\\Users\\–ú–∞–∫—Å–∏–º\\PycharmProjects\\BotBelogorsk\\bot\\updater.py'
#^^^^^^^^^^^^


rangParks = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H4:H7', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K4:K7', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N4:N7']
rangAlleys = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H11:H12', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K11:K12']
rangSquares = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H18:H20', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K18:K20', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N18:N20', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Q18:Q20']
rangMonuments = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H26:H28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K26:K28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N26:N28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Q26:Q28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!T26:T28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!W26:W28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Z26:Z28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!AC26:AC28', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!AF26:AF28']
rangFacts = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!G47:G48', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H47:H48', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!I47:I48', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!J47:J48']
places = [rangParks, rangAlleys, rangSquares, rangMonuments]

def handle_docs(msg):
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        new_folder = '–∞–ø–¥–µ–π—Ç—ã'
        if not os.path.exists(new_folder):
            os.makedirs(new_folder)

        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        file_info = bot.get_file(msg.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        # –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_filename = 'file_0.py'

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤—É—é –ø–∞–ø–∫—É —Å –∏–º–µ–Ω–µ–º file_0
        with open(os.path.join(new_folder, save_filename), 'wb') as new_file:
            new_file.write(downloaded_file)

        bot.reply_to(msg, "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –∏–º–µ–Ω–µ–º file_0!")
        filename = waytobot
        subprocess.run(['python', filename])
        bot.stop_bot()

    except Exception as e:
        bot.reply_to(msg, e)

def infoparks(msg, rang):
    bot.send_chat_action(msg.chat.id, 'typing')
    ZaprosParki.clear()
    res = ZaprosParki.main(rang)
    for i in res[0]:
        ans = '\n'.join(res[0])

    photos = res[1]
    photos = ''.join(photos)
    try:
        photos.replace('\n', '')
    except:
        pass
    photos = photos.split()
    for one in photos:
        if one == ' –°–ª–µ–¥—É—é—â–µ–µ ':
            photos.remove(one)
        else:
            pass

    print(res)
    def send_photos_with_text(chat_id, photos, ans):
        medias = []
        for link in photos:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é
            medias.append(telebot.types.InputMediaPhoto(link))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞-–æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_media_group(chat_id, medias)
        bot.send_message(chat_id, ans, parse_mode='HTML')
    bot.send_chat_action(msg.chat.id, 'cancel')
    send_photos_with_text(msg.chat.id, photos, ans)
    keys(msg)

def infoalleys(msg, rang):
    bot.send_chat_action(msg.chat.id, 'typing')
    ZaprosAlleys.clear()

    res = ZaprosAlleys.main(rang)
    for i in res[0]:
        ans = '\n'.join(res[0])

    photos = res[1]
    photos = ''.join(photos)
    try:
        photos.replace('\n', '')
    except:
        pass
    photos = photos.split()
    for one in photos:
        if one == '–°–ª–µ–¥—É—é—â–µ–µ':
            photos.remove(one)
        else:
            pass

    print(res)
    def send_photos_with_text(chat_id, photos, ans):
        medias = []
        for link in photos:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é
            medias.append(telebot.types.InputMediaPhoto(link))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞-–æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_media_group(chat_id, medias)
        bot.send_message(chat_id, ans, parse_mode='HTML')
    bot.send_chat_action(msg.chat.id, 'cancel')
    send_photos_with_text(msg.chat.id, photos, ans)
    keys(msg)

def infosquares(msg, rang):
    bot.send_chat_action(msg.chat.id, 'typing')
    ZaprosSquares.clear()

    res = ZaprosSquares.main(rang)
    for i in res[0]:
        ans = '\n'.join(res[0])

    photos = res[1]
    photos = ''.join(photos)
    try:
        photos.replace('\n', '')
    except:
        pass
    photos = photos.split()
    for one in photos:
        if one == '–°–ª–µ–¥—É—é—â–µ–µ':
            photos.remove(one)
        else:
            pass

    print(res)
    def send_photos_with_text(chat_id, photos, ans):
        medias = []
        for link in photos:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é
            medias.append(telebot.types.InputMediaPhoto(link))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞-–æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_media_group(chat_id, medias)
        bot.send_message(chat_id, ans, parse_mode='HTML')
    bot.send_chat_action(msg.chat.id, 'cancel')
    send_photos_with_text(msg.chat.id, photos, ans)
    keys(msg)

def infomonuments(msg, rang):
    bot.send_chat_action(msg.chat.id, 'typing')
    ZaprosMonuments.clear()

    res = ZaprosMonuments.main(rang)
    for i in res[0]:
        ans = '\n'.join(res[0])

    photos = res[1]
    photos = ''.join(photos)
    try:
        photos.replace('\n', '')
    except:
        pass
    photos = photos.split()
    for one in photos:
        if one == ' –°–ª–µ–¥—É—é—â–µ–µ ':
            photos.remove(one)
        else:
            pass

    print(res)
    def send_photos_with_text(chat_id, photos, ans):
        medias = []
        for link in photos:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é
            medias.append(telebot.types.InputMediaPhoto(link))
            print(medias)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞-–æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_media_group(chat_id, medias)
        bot.send_message(chat_id, ans, parse_mode='HTML')
    bot.send_chat_action(msg.chat.id, 'cancel')
    send_photos_with_text(msg.chat.id, photos, ans)
    keys(msg)

def randPlace(msg):
    typ = random.choice(places)
    place = random.choice(typ)
    if typ == rangParks:
        bot.send_message(msg.chat.id, '–ü–æ–π–¥–µ–º –≤ –ø–∞—Ä–∫')
        infoparks(msg, place)
    elif typ == rangAlleys:
        bot.send_message(msg.chat.id, '–ü—Ä–æ–≥—É–ª—è–π—Å—è –ø–æ –∞–ª–ª–µ—è–º')
        infoalleys(msg, place)
    elif typ == rangSquares:
        bot.send_message(msg.chat.id, '–ù–∞—à–µ–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–∫–≤–µ—Ä')
        infosquares(msg, place)
    elif typ == rangMonuments:
        bot.send_message(msg.chat.id, '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Ö–æ–¥–∏ –∫ —ç—Ç–æ–º—É –ø–∞–º—è—Ç–Ω–∏–∫—É')
        infomonuments(msg, place)

def facts(msg, rang):
    ZaprosFacts.clear()
    res = ZaprosFacts.main(rang)
    ans = '\n'.join(res)
    bot.send_message(msg.chat.id, ans, parse_mode='HTML')

def info—Åultura(msg, rang):
    bot.send_chat_action(msg.chat.id, 'typing')
    ZaprosCulture.clear()

    res = ZaprosCulture.main(rang)
    for i in res[0]:
        ans = '\n'.join(res[0])

    photos = res[1]
    photos = ''.join(photos)
    try:
        photos.replace('\n', '')
    except:
        pass
    photos = photos.split()
    for one in photos:
        if one == ' –°–ª–µ–¥—É—é—â–µ–µ ':
            photos.remove(one)
        else:
            pass

    print(res)

    def send_photos_with_text(chat_id, photos, ans):
        medias = []
        for link in photos:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é
            medias.append(telebot.types.InputMediaPhoto(link))
            print(medias)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞-–æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_media_group(chat_id, medias)
        bot.send_message(chat_id, ans, parse_mode='HTML')
    bot.send_chat_action(msg.chat.id, 'cancel')
    send_photos_with_text(msg.chat.id, photos, ans)
    keys(msg)
@bot.message_handler(commands=['start', 'help'])
def start(info):
    kb = types.ReplyKeyboardMarkup(row_width=2)
    but1 = types.KeyboardButton('–ü–∞—Ä–∫–∏')
    but2 = types.KeyboardButton('–ê–ª–ª–µ–∏')
    but3 = types.KeyboardButton('–°–∫–≤–µ—Ä—ã')
    but4 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫–∏')
    but5 = types.KeyboardButton('–•–æ—á—É –æ–∫—É–ª—å—Ç—É—Ä–∏—Ç—å—Å—è üë®‚Äçüéì')
    # but6 = types.KeyboardButton('–ì–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è?üèÉ‚Äç‚ôÄÔ∏è')
    but7 = types.KeyboardButton('–í—ã–±–µ—Ä–∏ –∑–∞ –º–µ–Ω—è, –∫—É–¥–∞ –ø–æ–π—Ç–∏ü§∏‚Äç‚ôÄÔ∏è')
    but8 = types.KeyboardButton('–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –≥–æ—Ä–æ–¥–µ ‚õ∫')

    kb.add(but1, but2, but3, but4, but5, but7, but8)
    bot.send_message(info.chat.id, '–ü—Ä–∏–≤–µ—Ç', reply_markup = kb)

def keys(msg):
    global parks, alleys, squares, monuments
    kb = types.ReplyKeyboardMarkup(row_width=2)
    but1 = types.KeyboardButton('–ü–∞—Ä–∫–∏')
    but2 = types.KeyboardButton('–ê–ª–ª–µ–∏')
    but3 = types.KeyboardButton('–°–∫–≤–µ—Ä—ã')
    but4 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫–∏')
    but5 = types.KeyboardButton('–•–æ—á—É –æ–∫—É–ª—å—Ç—É—Ä–∏—Ç—å—Å—è üë®‚Äçüéì')
    # but6 = types.KeyboardButton('–ì–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è?üèÉ‚Äç‚ôÄÔ∏è')
    but7 = types.KeyboardButton('–í—ã–±–µ—Ä–∏ –∑–∞ –º–µ–Ω—è, –∫—É–¥–∞ –ø–æ–π—Ç–∏ü§∏‚Äç‚ôÄÔ∏è')
    but8 = types.KeyboardButton('–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –≥–æ—Ä–æ–¥–µ ‚õ∫')
    kb.add(but1, but2, but3, but4, but5, but7, but8)
    parks = False
    alleys = False
    squares = False
    monuments = False
    bot.send_message(msg.chat.id, '–†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å', reply_markup=kb)

def parki(msg):
    global parks
    parks = True
    kb = types.ReplyKeyboardMarkup(row_width=1)
    but1 = types.KeyboardButton('–ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–∞—Ä–∫ –∫—É–ª—å—Ç—É—Ä—ã –∏ –æ—Ç–¥—ã—Ö–∞')
    but2 = types.KeyboardButton('–ü–∞—Ä–∫ –∏–º–µ–Ω–∏ –î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ')
    but3 = types.KeyboardButton('–ü–∞—Ä–∫ –ê–º—É—Ä—Å–µ–ª—å–º–∞—à')

    kb.add(but1, but2, but3)
    bot.send_message(msg.chat.id, '–ö–∞–∫–æ–π –ø–∞—Ä–∫ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=kb)

def alleyskeys(msg):
    global alleys
    alleys = True
    kb = types.ReplyKeyboardMarkup(row_width=1)
    but1 = types.KeyboardButton('–ê–ª–ª–µ—è –º–æ–ª–æ–¥–µ–∂–∏')
    but2 = types.KeyboardButton('–ê–ª–ª–µ—è –ì–µ—Ä–æ–µ–≤ –°–ª–∞–≤—ã	')

    kb.add(but1, but2,)
    bot.send_message(msg.chat.id, '–í—ã–±–∏—Ä–∞–π', reply_markup=kb)

def squareskeys(msg):
    global squares
    squares = True
    kb = types.ReplyKeyboardMarkup(row_width=1)
    but1 = types.KeyboardButton('–ñ–µ–º—á—É–∂–∏–Ω–∞')
    but2 = types.KeyboardButton('–ú–æ–ª–æ–¥–µ–∂–Ω—ã–π')
    but3 = types.KeyboardButton('–ß–µ—Ö–æ–≤—Å–∫–∏–π')
    but4 = types.KeyboardButton('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π')
    kb.add(but1, but2, but3, but4)
    bot.send_message(msg.chat.id, '–û –∫–∞–∫–æ–º —Å–∫–≤–µ—Ä–µ –ø–æ–≥–æ–≤–æ—Ä–∏–º?', reply_markup=kb)

def monumentskeys(msg):
    global monuments
    monuments = True
    kb = types.ReplyKeyboardMarkup(row_width=1)
    but1 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫ "–†–æ—Ç–∞–Ω—É"')
    but2 = types.KeyboardButton('–ú–æ–Ω—É–º–µ–Ω—Ç—ã –í.–ò. –õ–µ–Ω–∏–Ω—É')
    # but3 = types.KeyboardButton('–ë—Ä–∞—Ç—Å–∫–∞—è –º–æ–≥–∏–ª–∞ 312 –±–æ—Ä—Ü–∞–º')
    but4 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫ –≤–µ–∂–ª–∏–≤–æ–º—É —Å–æ–ª–¥–∞—Ç—É')
    but5 = types.KeyboardButton('–û–±–µ–ª–∏—Å–∫ ¬´–ì–µ—Ä–æ—è–º-–∫–æ–º—Å–æ–º–æ–ª—å—Ü–∞–º¬ª')
    but6 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫ –¢–µ–ª–µ–≥–∞ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü–µ–≤')
    but7 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫ ¬´–ü–∞—Ä–æ–≤–æ–∑-–ü36¬ª')
    but8 = types.KeyboardButton('–ö–∞–º–µ–Ω—å ¬´–ü–∞–º—è—Ç–∏ –∂–µ—Ä—Ç–≤ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–ø—Ä–µ—Å—Å–∏–π¬ª')
    but9 = types.KeyboardButton('–ü–∞–º—è—Ç–Ω–∏–∫ –í–æ–∏–Ω—É-–æ—Å–≤–æ–±–æ–¥–∏—Ç–µ–ª—é')
    kb.add(but1, but2, but4, but5, but6, but7, but8, but9)
    bot.send_message(msg.chat.id, '–ö—É–¥–∞ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑?', reply_markup=kb)

def culturakeys(msg):
    global cultura
    cultura = True
    kb = types.ReplyKeyboardMarkup(row_width=1)
    but1 = types.KeyboardButton('–î–µ—Ç—Å–∫–∞—è —à–∫–æ–ª–∞ –∏—Å–∫—É—Å—Å—Ç–≤')
    but2 = types.KeyboardButton('–¶–µ–Ω—Ç—Ä –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è')
    but3 = types.KeyboardButton('–î–æ–º –∫—É–ª—å—Ç—É—Ä—ã "–ê–º—É—Ä—Å–µ–ª—å–º–∞—à"')
    but4 = types.KeyboardButton('–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–º. –ú–∞–∫—Å–∏–º–∞ –ì–æ—Ä—å–∫–æ–≥–æ')
    kb.add(but1, but2, but3, but4)
    bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –∫—É–ª—å—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å', reply_markup=kb)

@bot.message_handler(content_types=['photo'])
def photo(msg):
    print(msg)

@bot.message_handler(content_types=['text'])
def message(msg):
    msg.text = msg.text.lower()
    print(msg.chat.id, msg.text)
    if '–ø–∞—Ä–∫–∏' in msg.text:
        parki(msg)

    elif msg.text == '–≥–æ—Ä–æ–¥—Å–∫–æ–π –ø–∞—Ä–∫ –∫—É–ª—å—Ç—É—Ä—ã –∏ –æ—Ç–¥—ã—Ö–∞' and parks == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H4:H7'
        infoparks(msg, rang)

    elif msg.text == '–ø–∞—Ä–∫ –∏–º–µ–Ω–∏ –¥–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ' and parks == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K4:K7'
        infoparks(msg, rang)

    elif msg.text == '–ø–∞—Ä–∫ –∞–º—É—Ä—Å–µ–ª—å–º–∞—à' and parks == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N4:N7'
        infoparks(msg, rang)

    elif '–∞–ª–ª–µ–∏' in msg.text:
        alleyskeys(msg)
        
    elif msg.text == '–∞–ª–ª–µ—è –º–æ–ª–æ–¥–µ–∂–∏' and alleys == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H11:H12'
        infoalleys(msg, rang)

    elif msg.text == '–∞–ª–ª–µ—è –≥–µ—Ä–æ–µ–≤ —Å–ª–∞–≤—ã' and alleys == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K11:K12'
        infoalleys(msg, rang)

    elif '—Å–∫–≤–µ—Ä—ã' in msg.text:
        squareskeys(msg)

    elif msg.text == '–∂–µ–º—á—É–∂–∏–Ω–∞' and squares == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H18:H20'
        infosquares(msg, rang)

    elif msg.text == '–º–æ–ª–æ–¥–µ–∂–Ω—ã–π' and squares == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K18:K20'
        infosquares(msg, rang)

    elif msg.text == '—á–µ—Ö–æ–≤—Å–∫–∏–π' and squares == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N18:N20'
        infosquares(msg, rang)

    elif msg.text == '–∞–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π' and squares == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Q18:Q20'
        infosquares(msg, rang)

    elif '–ø–∞–º—è—Ç–Ω–∏–∫–∏' in msg.text:
        monumentskeys(msg)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ "—Ä–æ—Ç–∞–Ω—É"' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H26:H28'
        infomonuments(msg, rang)

    elif msg.text == '–º–æ–Ω—É–º–µ–Ω—Ç—ã –≤.–∏. –ª–µ–Ω–∏–Ω—É' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K26:K28'
        infomonuments(msg, rang)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ —Å–≤—è—Ç—ã–º —Å—É–ø—Ä—É–≥–∞–º –ø–µ—Ç—Ä—É –∏ —Ñ–µ–≤—Ä–æ–Ω–∏–∏.' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!N26:N28'
        infomonuments(msg, rang)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ –≤–µ–∂–ª–∏–≤–æ–º—É —Å–æ–ª–¥–∞—Ç—É' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Q26:Q28'
        infomonuments(msg, rang)

    elif msg.text == '–æ–±–µ–ª–∏—Å–∫ ¬´–≥–µ—Ä–æ—è–º-–∫–æ–º—Å–æ–º–æ–ª—å—Ü–∞–º¬ª' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!T26:T28'
        infomonuments(msg, rang)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ —Ç–µ–ª–µ–≥–∞ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü–µ–≤' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!W26:W28'
        infomonuments(msg, rang)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ ¬´–ø–∞—Ä–æ–≤–æ–∑-–ø36¬ª' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!Z26:Z28'
        infomonuments(msg, rang)

    elif msg.text == '–∫–∞–º–µ–Ω—å ¬´–ø–∞–º—è—Ç–∏ –∂–µ—Ä—Ç–≤ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–ø—Ä–µ—Å—Å–∏–π¬ª' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!AC26:AC28'
        infomonuments(msg, rang)

    elif msg.text == '–ø–∞–º—è—Ç–Ω–∏–∫ –≤–æ–∏–Ω—É-–æ—Å–≤–æ–±–æ–¥–∏—Ç–µ–ª—é' and monuments == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!AF26:AF28'
        infomonuments(msg, rang)

    elif '–≤—ã–±–µ—Ä–∏ –∑–∞ –º–µ–Ω—è, –∫—É–¥–∞ –ø–æ–π—Ç–∏ü§∏‚Äç‚ôÄÔ∏è' in msg.text:
        randPlace(msg)

    elif '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –≥–æ—Ä–æ–¥–µ ‚õ∫' in msg.text:
        rang = random.choice(rangFacts)
        facts(msg, rang)

    elif '—Ö–æ—á—É –æ–∫—É–ª—å—Ç—É—Ä–∏—Ç—å—Å—è üë®‚Äçüéì' in msg.text:
        culturakeys(msg)

    elif msg.text == '–¥–µ—Ç—Å–∫–∞—è —à–∫–æ–ª–∞ –∏—Å–∫—É—Å—Å—Ç–≤' and cultura == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!H53:H55'
        info—Åultura(msg, rang)

    elif msg.text == '—Ü–µ–Ω—Ç—Ä –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è' and cultura == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!I53:I55'
        info—Åultura(msg, rang)

    elif msg.text == '–¥–æ–º –∫—É–ª—å—Ç—É—Ä—ã "–∞–º—É—Ä—Å–µ–ª—å–º–∞—à"' and cultura == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!J53:J55'
        info—Åultura(msg, rang)

    elif msg.text == '—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–º. –º–∞–∫—Å–∏–º–∞ –≥–æ—Ä—å–∫–æ–≥–æ' and cultura == True:
        rang = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!K53:K55'
        info—Åultura(msg, rang)

    else:
        bot.send_message(msg.chat.id, '–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ')
        start(msg)

@bot.message_handler(content_types=['document'])
def file(msg):
    print(msg)
    handle_docs(msg)

bot.infinity_polling()